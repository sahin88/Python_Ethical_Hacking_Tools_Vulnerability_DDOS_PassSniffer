import socket
from IPy import IP
import termcolor
class ScanPort:
	port_scan_to=None
	def iterate_targets(self,target,port):
		ip_address=self.get_ip_adress(target)
		print('\n'+ '[-_0 Scanning Target {}'.format(str(target)))
		for port in range(1,self.port_scan_to):
			self.scan_target_to_attack(ip_address,port)

	def get_ip_adress(self,ip):
		try:
			IP(ip)
			return (ip)
		except ValueError:
			return socket.gethostbyname(ip)

	def scan_target_to_attack(self,ipaddress, port):
		try:
			sock=socket.socket()
			sock.settimeout(1)
			sock.connect((ipaddress, port))
			try:
				banner=sock.recv(1024).decode().strip('\n').strip('\r')
				print(termcolor.colored('[+] Port {} is open :  {}'.format(port, str(banner)),'green'))
			except ValueError:
				print(termcolor.colored('[+] Port {} is open'.format(port)),'green')
		except:
			print(termcolor.colored("[-] The port {} is closed".format(port),'red'))
			sock.close()

	def get_started(self):
		self.port_scan_to=int(input(termcolor.colored('[+] How many port should be scanned ? ','yellow')))
		targets= input(termcolor.colored('[+] Enter Target/s To scan:(split multiple targets with ,) : ','blue'))
		if ',' in targets:
			for target in targets.split(','):
				self.iterate_targets(target.strip(" "), self.port_scan_to)
		else:
			self.iterate_targets(targets.strip(" "),self.port_scan_to)

scnprt=ScanPort()
scnprt.get_started()

